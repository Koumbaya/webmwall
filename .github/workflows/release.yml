name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.24.4

    - name: Create dist directory
      run: mkdir -p dist

    - name: Build Linux (amd64)
      run: GOOS=linux GOARCH=amd64 go build -o dist/webmwall-linux-amd64 .

    - name: Build Linux (arm64)
      run: GOOS=linux GOARCH=arm64 go build -o dist/webmwall-linux-arm64 .

    - name: Build macOS (amd64)
      run: GOOS=darwin GOARCH=amd64 go build -o dist/webmwall-darwin-amd64 .

    - name: Build macOS (arm64)
      run: GOOS=darwin GOARCH=arm64 go build -o dist/webmwall-darwin-arm64 .

    - name: Build Windows (amd64)
      run: GOOS=windows GOARCH=amd64 go build -o dist/webmwall-windows-amd64.exe .

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Linux (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-linux-amd64
        asset_name: webmwall-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux (arm64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-linux-arm64
        asset_name: webmwall-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload macOS (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-darwin-amd64
        asset_name: webmwall-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS (arm64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-darwin-arm64
        asset_name: webmwall-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-windows-amd64.exe
        asset_name: webmwall-windows-amd64.exe
        asset_content_type: application/octet-stream

name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build for multiple platforms
      run: |
        # Create dist directory
        mkdir -p dist
        
        # Build for Linux (amd64)
        GOOS=linux GOARCH=amd64 go build -o dist/webmwall-linux-amd64 .
        
        # Build for Linux (arm64)
        GOOS=linux GOARCH=arm64 go build -o dist/webmwall-linux-arm64 .
        
        # Build for macOS (amd64)
        GOOS=darwin GOARCH=amd64 go build -o dist/webmwall-darwin-amd64 .
        
        # Build for macOS (arm64/M1)
        GOOS=darwin GOARCH=arm64 go build -o dist/webmwall-darwin-arm64 .
        
        # Build for Windows (amd64)
        GOOS=windows GOARCH=amd64 go build -o dist/webmwall-windows-amd64.exe .
        
        # Build for Windows (arm64)
        GOOS=windows GOARCH=arm64 go build -o dist/webmwall-windows-arm64.exe .

    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Automated release from commit ${{ github.sha }}
          
          ## Downloads
          - Linux (x64): webmwall-linux-amd64
          - Linux (ARM64): webmwall-linux-arm64
          - macOS (Intel): webmwall-darwin-amd64
          - macOS (M1/M2): webmwall-darwin-arm64
          - Windows (x64): webmwall-windows-amd64.exe
          - Windows (ARM64): webmwall-windows-arm64.exe
        draft: false
        prerelease: false

    - name: Upload Linux (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-linux-amd64
        asset_name: webmwall-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux (arm64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-linux-arm64
        asset_name: webmwall-linux-arm64
        asset_content_type: application/octet-stream

    - name: Upload macOS (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-darwin-amd64
        asset_name: webmwall-darwin-amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS (arm64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-darwin-arm64
        asset_name: webmwall-darwin-arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows (amd64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-windows-amd64.exe
        asset_name: webmwall-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Windows (arm64) Binary
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/webmwall-windows-arm64.exe
        asset_name: webmwall-windows-arm64.exe
        asset_content_type: application/octet-stream
